# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
  branches:
    include:
    - '*'

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'

strategy:
  matrix:
    debug: 
      BuildConfig: Debug
    release: 
      BuildConfig: Release

steps:
- task: PowerShell@2
  displayName: "Use JDK11 by default"
  inputs:
    targetType: 'inline'
    script: |
      $jdkPath = $env:JAVA_HOME_11_X64
      Write-Host "##vso[task.setvariable variable=JAVA_HOME]$jdkPath"

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud Connection'
    organization: 'dakraid'
    scannerMode: 'MSBuild'
    projectKey: 'Dakraid_RW_DSGUI'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(BuildConfig)'
    clean: true
    maximumCpuCount: true

- task: VSTest@2
  displayName: 'VSTest - Test Assemblies'
  inputs:
    testAssemblyVer2: |
     **\$(BuildConfiguration)\*DSGUI*.dll
     !**\obj\**
    codeCoverageEnabled: true
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfig)'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.SourcesDirectory)'
    artifact: 'RW_DSGUI_$(Build.BuildId)'
    publishLocation: 'pipeline'